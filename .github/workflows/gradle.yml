# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  workflow_dispatch:

jobs:
  build:
    name: Build and Release
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v2
      with:
        java-version: '11'
        distribution: 'temurin'
    - name: Gradle Wrapper Validation
      # You may pin to the exact commit or the version.
      # uses: gradle/wrapper-validation-action@e6e38bacfdf1a337459f332974bb2327a31aaf4b
      uses: gradle/wrapper-validation-action@v1.0.4
    - name: Build with Gradle
      uses: gradle/gradle-build-action@937999e9cc2425eddc7fd62d1053baf041147db7
      with:
        arguments: build
    - name: Get App Version
      id: get_version
      run: echo ::set-output name=version::$(./gradlew getReleaseVersion --console=plain -q --warning-mode=none)
    - uses: actions/upload-artifact@v2
      with:
        name: Package
        path: |
          ./app/build/lib/VOTL-*
    - name: Create Release
      if: "!contains( steps.get_version.outputs.version , 'SNAPSHOT')"
      # You may pin to the exact commit or the version.
      # uses: ncipollo/release-action@40bb172bd05f266cf9ba4ff965cb61e9ee5f6d01
      uses: ncipollo/release-action@v1.9.0
      with:
        # An optional set of paths representing artifacts to upload to the release. This may be a single path or a comma delimited list of paths (or globs)
        artifacts: ./app/build/lib/VOTL-*.jar
        # An optional set of paths representing artifacts to upload to the release. This may be a single path or a comma delimited list of paths (or globs)
        # artifacts: # optional, default is  
        # Optionally marks this release as prerelease. Set to true to enable.
        # prerelease: # optional, default is 
        # Indicates if existing release artifacts should be replaced. Defaults to true.
        # replacesArtifacts: # optional, default is true
        # An optional tag for the release. If this is omitted the git ref will be used (if it is a tag).
        tag: ${{ steps.get_version.outputs.version }}
        # The Github token.
        token: ${{ secrets.GITHUB_TOKEN }}
